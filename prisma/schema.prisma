generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attachments {
  id          Int       @id @default(autoincrement())
  file_path   String?   @db.VarChar(255)
  task_id     Int?
  uploaded_at DateTime? @default(now()) @db.Timestamp(6)
  tasks       tasks?    @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model comments {
  id         Int       @id @default(autoincrement())
  content    String?
  user_id    Int?
  task_id    Int?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  tasks      tasks?    @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tasks {
  id          Int           @id @default(autoincrement())
  title       String?       @db.VarChar(255)
  description String?
  status      String?       @db.VarChar(50)
  due_date    DateTime?     @db.Date
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @default(now()) @db.Timestamp(6)
  user_id     Int?
  priority    String?       @db.VarChar(50)
  attachments attachments[]
  comments    comments[]
  users       users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team_users {
  id      Int    @id @default(autoincrement())
  user_id Int?
  team_id Int?
  teams   teams? @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users   users? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model teams {
  id         Int          @id @default(autoincrement())
  name       String?      @db.VarChar(255)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  team_users team_users[]
}

model users {
  id            Int          @id @default(autoincrement())
  name          String?      @db.VarChar(255)
  email         String?      @unique @db.VarChar(255)
  role          String?      @db.VarChar(50)
  last_login    DateTime?    @db.Timestamp(6)
  is_active     Boolean?     @default(true)
  created_at    DateTime?    @default(now()) @db.Timestamp(6)
  password_hash String?      @db.VarChar(255)
  updated_at    DateTime?    @default(now()) @db.Timestamp(6)
  comments      comments[]
  tasks         tasks[]
  team_users    team_users[]
}
